{"version":3,"sources":["assets/logo.svg","assets/user.svg","assets/wallet.svg","assets/bomb.svg","assets/explosion.svg","components/Login/Login.js","components/Header/Header.js","components/Bet/Bet.js","components/GamePanel/GamePanel.js","components/LastResults/LastResults.js","components/BetHistory/BetHistory.js","components/BetBetter/BetBetter.js","containers/Main.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","usernameChange","incorrectUsername","incorrectBalance","balanceChange","handleLogin","handleGuestLogin","id","src","logo","alt","onSubmit","e","preventDefault","name","className","forhtml","onChange","type","minLength","placeholder","required","min","max","onClick","Header","balance","username","updateBalance","useState","modifyBalance","setModifyBalance","modifyBalanceError","setModifyBalanceError","balanceToAdd","setBalanceToAdd","walletIcon","localStorage","getItem","target","value","Number","newBalance","setItem","userIcon","Bet","setBet","isGameActive","betSuccess","outOfFunds","betAmountChange","cashOutChange","incorrectCashOut","incorrectBetAmount","betPlaced","blockBet","setBlockBet","useEffect","step","disabled","GamePanel","multiplier","gameFinish","crash","win","betCashOut","toFixed","explossion","bomb","LastResults","lastResultsArray","setLastResultsArray","showLastResults","useCallback","length","sliceArray","slice","concat","map","result","index","key","BetHistory","betAmount","historyArray","setHistoryArray","useFirstTime","useRef","firstTime","showBetHistory","current","prizeAmount","splice","elementArray","element","BetBetter","bestBet","setBestBet","showBestBet","reduce","subArrayAnterior","subArrayActual","item","Main","setMultiplier","setIsGameActive","setCrash","setGameFinish","setBetAmount","cashOut","setCashOut","setbetCashOut","setOutOfFunds","setIncorrectCashOut","setIncorrectBetAmount","setBetSuccess","setBetPlaced","setWin","gameStart","Math","random","gameFinished","setTimeout","reset","handleWin","prize","oldBalance","interval","setInterval","clearInterval","App","setUsername","setIncorrectUsername","setBalance","setIncorrectBalance","logIn","setLogIn","handleGetBalance","console","log","href","title","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,wUC+B5BC,EA3BD,SAAC,GAAyG,IAAxGC,EAAuG,EAAvGA,eAAgBC,EAAuF,EAAvFA,kBAAmBC,EAAoE,EAApEA,iBAAkBC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,iBAE7F,OACI,0BAAMC,GAAG,SACL,yBAAKA,GAAG,aAAaC,IAAKC,IAAMC,IAAI,SACpC,0BAAMH,GAAG,aAAaI,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBC,KAAK,cAC1D,2BAAOC,UAAU,mBAAmBC,QAAQ,kBAA5C,qBACA,2BAAOD,UAAU,mBAAmBR,GAAG,iBAAiBU,SAAUhB,EAAgBiB,KAAK,OAAOC,UAAU,IAAIC,YAAY,yBAAuBC,UAAQ,IACvJ,2BAAON,UAAU,mBAAmBC,QAAQ,iBAA5C,iBACA,2BAAOD,UAAU,mBAAmBR,GAAG,gBAAgBU,SAAUb,EAAec,KAAK,SAASI,IAAI,KAAKC,IAAI,QAAQH,YAAY,yBAAsBC,UAAQ,IAEzJlB,GACI,uBAAGY,UAAU,oBAAb,sDAGJb,GACA,uBAAGa,UAAU,oBAAb,yDAEJ,4BAAQR,GAAG,oBAAoBW,KAAK,SAASM,QAASnB,GAAtD,YAEJ,yBAAKE,GAAG,eACJ,4BAASA,GAAG,qBAAqBiB,QAASlB,GAA1C,2B,wCCgCDmB,EAnDA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,cAAmB,EAETC,oBAAS,GAFA,mBAE5CC,EAF4C,KAE7BC,EAF6B,OAGCF,oBAAS,GAHV,mBAG5CG,EAH4C,KAGxBC,EAHwB,OAIXJ,mBAAS,GAJE,mBAI5CK,EAJ4C,KAI9BC,EAJ8B,KAsBvD,OACI,4BAAQ5B,GAAG,UACP,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,yBAAKH,GAAG,iBAAiBiB,QAAS,kBAAMO,GAAiB,KACrD,yBAAKxB,GAAG,sBAAsBG,IAAI,cAAcF,IAAK4B,MACrD,2BAAIV,EAAJ,MAGAI,GACA,yBAAKvB,GAAG,iBACJ,4BAAQA,GAAG,sBAAsBiB,QAAS,kBAAIO,GAAiB,EAAOE,GAAsB,MAA5F,MACA,wBAAI1B,GAAG,0BAAP,aAAwC8B,aAAaC,QAAQ,YAA7D,KACA,uBAAG/B,GAAG,6BAAN,kCAEIyB,GACA,0BAAMzB,GAAG,uBAAT,gCAEJ,2BAAOW,KAAK,SAASD,SArBR,SAACL,GACtBuB,EAAgBvB,EAAE2B,OAAOC,QAoBgClB,IAAI,IAAIf,GAAG,wBAC5D,4BAAQW,KAAK,SAASX,GAAG,qBAAqBiB,QAlC9B,WACxB,GAAGiB,OAAOP,IAAiB,IAAMA,EAC7BD,GAAsB,OACrB,CACDF,GAAiB,GACjB,IACIW,EADaD,OAAOJ,aAAaC,QAAQ,YACfG,OAAOP,GACrCG,aAAaM,QAAQ,UAAWD,GAChCd,OA0BI,cAGR,yBAAKrB,GAAG,kBACJ,yBAAKA,GAAG,sBAAsBG,IAAI,eAAeF,IAAKoC,MACtD,2BAAIjB,MCPDkB,G,MAzCH,SAAC,GAAqI,IAApIC,EAAmI,EAAnIA,OAAQC,EAA2H,EAA3HA,aAAcC,EAA6G,EAA7GA,WAAYC,EAAiG,EAAjGA,WAAYC,EAAqF,EAArFA,gBAAiBC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,mBAAoBC,EAAe,EAAfA,UAAe,EAE7GzB,oBAAS,GAFoG,mBAEtI0B,EAFsI,KAE5HC,EAF4H,KAY7I,OARAC,qBAAU,WAEFD,KADDT,IAAgBO,MAKpB,CAACC,EAAUD,EAAWP,IAGrB,6BAASxC,GAAG,OACR,0BAAMA,GAAG,WAAWI,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBACjC,2BAAOE,UAAU,YAAYC,QAAQ,oBAArC,SACA,2BAAOD,UAAU,YAAYR,GAAG,mBAAmBW,KAAK,SAASI,IAAI,IAAIC,IAAKc,aAAaC,QAAQ,WAAYrB,SAAUiC,EAAiB9B,YAAY,iBAElJ6B,GACA,0BAAMlC,UAAU,kBAAhB,sEAGAqC,GACA,0BAAMrC,UAAU,kBAAhB,oDAGAsC,GACA,0BAAMtC,UAAU,kBAAhB,2DAGAiC,GACA,0BAAMjC,UAAU,oBAAhB,sBAEJ,2BAAOA,UAAU,YAAYR,GAAG,gBAAgBS,QAAQ,iBAAxD,UACA,2BAAOD,UAAU,YAAYR,GAAG,gBAAgBW,KAAK,SAASI,IAAI,MAAMoC,KAAK,MAAMnC,IAAI,KAAKN,SAAUkC,EAAe/B,YAAY,sCACjI,4BAAQb,GAAG,WAAWW,KAAK,SAASyC,SAAUJ,EAAU/B,QAASsB,GAAjE,e,0CCHDc,EA7BG,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,WAAmBC,GAAgD,EAAvDC,MAAuD,EAAhDD,YAAYf,EAAoC,EAApCA,aAA2BiB,GAAS,EAAtBC,WAAsB,EAATD,KAE1E,OACI,6BAASzD,GAAG,cACR,yBAAKA,GAAG,yBAEHwC,GACD,wBAAIxC,GAAG,wBAAP,6BAGJ,yBAAMA,GAAG,yBACL,4BAAKsD,EAAWK,QAAQ,GAAxB,MAEJ,yBAAK3D,GAAG,mBAEJwC,IACKe,EAAc,yBAAKvD,GAAG,6BAA6BC,IAAK2D,IAAYzD,IAAI,cAAkB,yBAAKH,GAAG,wBAAwBC,IAAK4D,IAAM1D,IAAI,WAGlJ,yBAAKH,GAAG,qBAEAwC,GAAgBiB,EACf,4CAAuB,sC,aCK7BK,MA9Bf,YAA2C,IAArBN,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,WAAa,EACUjC,mBAAS,IADnB,mBAC/ByC,EAD+B,KACbC,EADa,KAGhCC,EAAkBC,uBAAa,WACjC,GAAGH,EAAiBI,OAAS,EAAE,CAC3B,IAAIC,EAAaL,EAAiBM,MAAM,GACxCL,EAAoBI,EAAWE,OAAOd,SACjCO,EAAiBI,QAAU,GAChCH,EAAoB,GAAD,mBAAKD,GAAL,CAAuBP,OAE/C,CAACA,EAAOO,IAQX,OANAb,qBAAU,WACHK,GACCU,MAEL,CAACV,IAGA,6BAASvD,GAAG,gBACR,wBAAIA,GAAG,sBAAP,0BACA,wBAAIA,GAAG,qBACF+D,EAAiBQ,KAAI,SAACC,EAAQC,GAAT,OAClB,wBAAIC,IAAKD,EAAOjE,UAAU,4BAA4BgE,EAAtD,WC0CLG,G,MAjEI,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,UAAWrB,EAAwD,EAAxDA,WAAYG,EAA4C,EAA5CA,WAAYD,EAAgC,EAAhCA,IAAKV,EAA2B,EAA3BA,UAA2B,KAAhBO,WAE5BhC,mBAAS,KAFmC,mBAE7EuD,EAF6E,KAE/DC,EAF+D,KAG9EC,EAAeC,iBAAO,CAACC,WAAW,IAElCC,EAAiBhB,uBAAY,WAE/B,GAAGnB,EAAU,CAKT,GAJGgC,EAAaI,QAAQF,YACpBF,EAAaI,QAAQF,WAAY,GAGlCJ,EAAaV,OAAS,EACrB,GAAGV,EAAI,CACH,IAAI2B,EAAelD,OAAO0C,GAAa1C,OAAOwB,GAC9CoB,GAAgB,SAAAD,GAAY,MAAI,sBAAIA,GAAJ,CAAkB,CAACD,EAAU,IAAKlB,EAAW,IAAK0B,KAAcC,OAAO,WAEvGP,GAAgB,SAAAD,GAAY,MAAI,sBAAIA,GAAJ,CAAkB,CAACD,EAAU,IAAKlB,EAAW,IAAI,OAAM2B,OAAO,MAGtG,GAAGR,EAAaV,QAAU,EACtB,GAAGV,EAAI,CACH,IAAI2B,EAAelD,OAAO0C,GAAa1C,OAAOwB,GAC9CoB,GAAgB,SAAAD,GAAY,4BAAQA,GAAR,CAAsB,CAACD,EAAU,IAAKlB,EAAW,IAAK0B,aAElFN,GAAgB,SAAAD,GAAY,4BAAQA,GAAR,CAAsB,CAACD,EAAU,IAAKlB,EAAW,IAAK,aAIhG,CAACkB,EAAWnB,EAAKC,EAAYmB,IAQ/B,OANA3B,qBAAU,WACHK,GACC2B,MAEL,CAAC3B,IAGA,6BAASvD,GAAG,eACR,yBAAKA,GAAG,qBACJ,wBAAIA,GAAG,4BAAP,yBACA,yBAAKA,GAAG,2BACJ,uBAAGQ,UAAU,0BAAb,SACA,uBAAGA,UAAU,0BAAb,UACA,uBAAGA,UAAU,0BAAb,aAGNuE,EAAaI,QAAQF,WACvB,yBAAKjF,GAAG,wBAEC+E,EAAaI,QAAQF,WACtBJ,EAAaN,KAAI,SAACe,EAAcb,GAAf,OACjB,wBAAIC,IAAKD,EAAOjE,UAAU,4BACrB8E,EAAaf,KAAI,SAACgB,EAASd,GAAV,OACd,wBAAIjE,UAAU,4BAA4BkE,IAAKD,GAAQc,cCdpEC,G,MAxCG,SAAC,GAA8C,IAA7CZ,EAA4C,EAA5CA,UAAWrB,EAAiC,EAAjCA,WAAYG,EAAqB,EAArBA,WAAYD,EAAS,EAATA,IAAS,EAE9BnC,mBAAS,IAFqB,mBAErDmE,EAFqD,KAE5CC,EAF4C,KAItDC,EAAczB,uBAAY,WAC5B,GAAGT,EAAI,CACH,IAAI2B,EAAelD,OAAO0C,GAAa1C,OAAOwB,GAC9CgC,GAAW,SAAAD,GAAO,4BAAQA,GAAR,CAAiB,CAAC,CAACb,EAAU,KAAM,CAAClB,EAAW,KAAM,CAAC0B,YAE7E,CAACR,EAAWnB,EAAKC,EAAY+B,IAQhC,OANAvC,qBAAU,WACHK,GACKoC,MAET,CAACpC,IAGA,6BAASvD,GAAG,cACR,yBAAKA,GAAG,oBACJ,wBAAIA,GAAG,2BAAP,iBACA,yBAAKA,GAAG,0BACJ,uBAAGQ,UAAU,yBAAb,SACA,uBAAGA,UAAU,yBAAb,UACA,uBAAGA,UAAU,yBAAb,YAGR,yBAAKR,GAAG,sBACJ,wBAAIA,GAAG,2BAEa,IAAnByF,EAAQtB,QAEJsB,EAAQG,QAAO,SAACC,EAAkBC,GAAnB,OAAuCA,EAAe,GAAKD,EAAiB,GAAKA,EAAmBC,KAAiBvB,KAAI,SAACwB,EAAMtB,GAAP,OAAkB,wBAAIjE,UAAU,2BAA2BkE,IAAKD,GAAQsB,WCsHtNC,G,MAjJF,SAAC,GAAqB,IAApB3E,EAAmB,EAAnBA,cAAmB,EAEIC,mBAAS,GAFb,mBAEzBgC,EAFyB,KAEb2C,EAFa,OAGQ3E,oBAAS,GAHjB,mBAGzBkB,EAHyB,KAGX0D,EAHW,OAIN5E,mBAAS,GAJH,mBAIzBkC,EAJyB,KAIlB2C,EAJkB,OAKI7E,oBAAS,GALb,mBAKzBiC,EALyB,KAKb6C,EALa,OAME9E,mBAAS,GANX,mBAMzBsD,EANyB,KAMdyB,EANc,OAOF/E,mBAAS,GAPP,mBAOzBgF,EAPyB,KAOhBC,EAPgB,OAQIjF,mBAAS,GARb,mBAQzBoC,EARyB,KAQb8C,EARa,OASIlF,oBAAS,GATb,mBASzBoB,EATyB,KASb+D,EATa,OAUgBnF,oBAAS,GAVzB,mBAUzBuB,EAVyB,KAUP6D,EAVO,OAWoBpF,oBAAS,GAX7B,mBAWzBwB,EAXyB,KAWL6D,EAXK,OAYIrF,oBAAS,GAZb,mBAYzBmB,EAZyB,KAYbmE,EAZa,QAaEtF,oBAAS,GAbX,qBAazByB,GAbyB,MAad8D,GAbc,SAcVvF,oBAAS,GAdC,qBAczBmC,GAdyB,MAcpBqD,GAdoB,MAe1B/B,GAAeC,iBAAO,CAACC,WAAW,IAOlC8B,GAAY7C,uBAAY,WALL,IAACnD,EAAKC,GAMS,IAAnC+D,GAAaI,QAAQF,YACtBmB,GAAc,GACV5D,IACF2D,GAToBpF,EASM,IATDC,EASM,IAR5BD,GAAOC,EAAMD,GAAOiG,KAAKC,UAQQtD,QAAQ,IAC5CuC,GAAgB,OAGnB,CAAC1D,IAEE0E,GAAehD,uBAAY,WAC/BkC,GAAc,GACdU,IAAO,GACPD,IAAa,GACbM,YAAW,WACTC,KACAD,YAAW,WACTJ,OACC,OACF,OACF,CAACxD,IAEE6D,GAAQlD,uBAAY,WACxB+B,EAAc,GACdC,GAAgB,KACf,IAEGmB,GAAYnD,uBAAY,WAC5B4C,IAAO,GACPD,IAAa,GACb,IAAIS,EAAQpF,OAAO0C,GAAa1C,OAAOwB,GACnC6D,EAAarF,OAAOJ,aAAaC,QAAQ,YACzCI,GAAcD,OAAOqF,GAAcrF,OAAOoF,IAAQ3D,QAAQ,GAC9D7B,aAAaM,QAAQ,UAAWF,OAAOC,IACvCd,OA4EF,OA7BA6B,qBAAU,WACR,IAAsC,IAAnC6B,GAAaI,QAAQF,UAKnB,CACL,IAAIuC,EAAW,KAiBf,OAhBGhF,EACDgF,EAAWC,aAAY,WAClBnE,EAAWK,QAAQ,KAAOH,IAC3ByC,GAAc,SAAA3C,GAAU,OAAIA,EAAa,MACtCP,IAAaO,EAAWK,QAAQ,GAAKD,GACtC2D,MAGD/D,EAAWK,QAAQ,KAAOH,IACzBkE,cAAcF,GACdN,QAEH,KACK1E,GAA+B,IAAfc,GACxBoE,cAAcF,GAET,kBAAME,cAAcF,IAtBzBzC,GAAaI,QAAQF,WAAY,EAC/BkC,YAAW,WACTJ,OACC,OAqBN,CAACvE,EAAcc,EAAYE,EAAO0D,GAAcH,GAAWxD,EAAYE,GAAKV,GAAWsE,KAIxF,oCACE,0BAAMrH,GAAG,QACP,kBAAC,EAAD,CAAKwC,aAAcA,EAAcC,WAAYA,EAAYF,OA5E1C,WACnB,GAAyB,IAAtBL,OAAO0C,IAAqBA,EA4B7B+B,GAAsB,GACpBQ,YAAW,WACTR,GAAsB,KACrB,UA9BL,GAAGzE,OAAOJ,aAAaX,UAAYe,OAAO0C,GACxC,GAAG1C,OAAOoE,IAAY,KAAOpE,OAAOoE,IAAY,KAC9C,IAAI9D,EAAa,CACfoE,GAAc,GACdO,YAAW,WACTP,GAAc,KACb,KACHJ,EAAcF,GACdO,IAAa,GACb,IACI1E,GADaD,OAAOJ,aAAaC,QAAQ,YACdG,OAAO0C,IAAYjB,QAAQ,GAC1D7B,aAAaM,QAAQ,UAAWD,GAChCd,UAGFqF,GAAoB,GACpBS,YAAW,WACTT,GAAoB,KACnB,UAGLD,GAAc,GACdU,YAAW,WACTV,GAAc,KACb,MAkD4E9D,gBAxC3D,SAACtC,GACzBgG,EAAahG,EAAE2B,OAAOC,QAuCiGW,cApCjG,SAACvC,GACvBkG,EAAWlG,EAAE2B,OAAOC,QAmCmIS,WAAYA,EAAYG,iBAAkBA,EAAkBC,mBAAoBA,EAAoBC,UAAWA,KAClQ,kBAAC,EAAD,CAAYW,WAAYA,EAAYJ,WAAYA,EAAYP,UAAWA,GAAWQ,WAAYA,EAAYqB,UAAWA,EAAWnB,IAAKA,KACrI,kBAAC,EAAD,CAAWC,WAAYA,EAAYJ,WAAYA,EAAYP,UAAWA,GAAWQ,WAAYA,EAAYqB,UAAWA,EAAWnB,IAAKA,KACpI,kBAAC,EAAD,CAAWA,IAAKA,GAAKH,WAAYA,EAAaI,WAAYA,EAAYF,MAAOA,EAAOD,WAAYA,EAAYR,UAAWA,GAAWP,aAAcA,EAAc8D,QAASA,IACvK,kBAAC,EAAD,CAAa/C,WAAYA,EAAYC,MAAOA,QCjErCmE,G,MA5EH,WAAO,IAAD,EAEkBrG,mBAASQ,aAAaC,QAAQ,aAFhD,mBAEPX,EAFO,KAEGwG,EAFH,OAGoCtG,oBAAS,GAH7C,mBAGP3B,EAHO,KAGYkI,EAHZ,OAIgBvG,mBAASQ,aAAaC,QAAQ,YAJ9C,mBAIPZ,EAJO,KAIE2G,EAJF,OAKkCxG,oBAAS,GAL3C,mBAKP1B,EALO,KAKWmI,EALX,OAMYzG,oBAAS,GANrB,mBAMP0G,EANO,KAMAC,EANA,KA8CRC,EAAmB,WACrBJ,EAAWhG,aAAaC,QAAQ,aAYpC,OAAID,aAAaC,QAAQ,YAOqB,SAArCD,aAAaC,QAAQ,aAA0BiG,EAEhD,oCACI,kBAAC,EAAD,CAAQ7G,QAASA,EAASC,SAAUA,EAAUC,cAAe6G,IAC7D,kBAAC,EAAD,CAAM7G,cAAe6G,UAJ3B,EALE,oCACA,kBAAC,EAAD,CAAOvI,kBAAmBA,EAAmBC,iBAAkBA,EAAkBE,YAtDrE,WAChBqI,QAAQC,IAAIhH,GACI,OAAbA,GACIA,EAAS+C,OAAS,EACdhD,GAAW,IAAMA,GAAW,KAC/BW,aAAaM,QAAQ,YAAY,GACjCN,aAAaM,QAAQ,WAAYhB,GACjCU,aAAaM,QAAQ,UAAWjB,GAChC8G,GAAS,KAELF,GAAoB,GACpBZ,YAAW,WACPY,GAAoB,KACrB,OASXF,GAAqB,GACjBV,YAAW,WACPU,GAAqB,KACtB,OA6BoG9H,iBAzB1F,WACrB6H,EAAY,YACZE,EAAW,KACXhG,aAAaM,QAAQ,YAAY,GACjCN,aAAaM,QAAQ,WAAY,YACjCN,aAAaM,QAAQ,UAAW,OAChC6F,GAAS,IAmB0IvI,eAZ9H,SAACW,GACtBuH,EAAYvH,EAAE2B,OAAOC,OACrBkG,QAAQC,IAAIhH,IAUyKvB,cAPjK,SAACQ,GACrByH,EAAWzH,EAAE2B,OAAOC,UAOhB,4BAAQjC,GAAG,UAAS,uBAAGA,GAAG,eAAN,iBAAkC,uBAAGQ,UAAU,oBAAoB6H,KAAK,0BAA0BC,MAAM,cAAtE,cAAlC,SAAyI,uBAAG9H,UAAU,oBAAoB6H,KAAK,4BAA4BC,MAAM,YAAxE,0BCzDrJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,QD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.fa42caf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8780037d.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.e2d5f809.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.2d9b6e2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bomb.be62f60c.svg\";","module.exports = __webpack_public_path__ + \"static/media/explosion.1cd76f4d.svg\";","import React from 'react';\r\nimport './Login.css';\r\nimport logo from '../../assets/logo.svg'\r\n\r\nconst Login = ({usernameChange, incorrectUsername, incorrectBalance, balanceChange, handleLogin, handleGuestLogin}) => {\r\n\r\n    return(\r\n        <main id=\"login\">\r\n            <img id=\"login_logo\" src={logo} alt=\"logo\"/>\r\n            <form id=\"login_form\" onSubmit={e => e.preventDefault()} name=\"login_form\">\r\n                <label className=\"login_form_label\" forhtml=\"login_username\">Nombre de usuario</label>\r\n                <input className=\"login_form_input\" id=\"login_username\" onChange={usernameChange} type=\"text\" minLength=\"3\" placeholder=\"Mínimo 3 caracteres\"  required/>\r\n                <label className=\"login_form_label\" forhtml=\"login_balance\">Monto inicial</label>\r\n                <input className=\"login_form_input\" id=\"login_balance\" onChange={balanceChange} type=\"number\" min=\"10\" max=\"10000\" placeholder=\"Mín 10$ Max 10.000$\" required/>\r\n                {\r\n                    incorrectBalance &&\r\n                        <p className=\"login_form_error\">Introduzca un monto válido, entre 10$ y 10.000$</p>\r\n                }\r\n                {\r\n                    incorrectUsername &&\r\n                    <p className=\"login_form_error\">El nombre de usuario debe tener al menos 3 caracteres</p>\r\n                }\r\n                <button id=\"login_form_button\" type=\"button\" onClick={handleLogin}> Entrar</button>\r\n            </form>\r\n            <div id=\"login_guest\">\r\n                <button  id=\"login_guest_button\" onClick={handleGuestLogin}>Entrar como invitado</button>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport logo from '../../assets/logo.svg';\r\nimport userIcon from '../../assets/user.svg';\r\nimport walletIcon from '../../assets/wallet.svg';\r\n\r\nconst Header = ({balance, username, updateBalance}) => { //utiliza el balance desde app para que se pueda actualizar desde el panel de juego\r\n\r\n    const [modifyBalance, setModifyBalance] = useState(false);      \r\n    const [modifyBalanceError, setModifyBalanceError] = useState(false);\r\n    const [balanceToAdd, setBalanceToAdd] = useState(0);\r\n\r\n    const handleModifyBalance = () => {                     //validaciones y seteo del balance cuando el usuario interactua con el monedero\r\n        if(Number(balanceToAdd) <= 0 || !balanceToAdd){\r\n            setModifyBalanceError(true)\r\n        }else{\r\n            setModifyBalance(false)\r\n            let oldBalance = Number(localStorage.getItem(\"balance\"));\r\n            let newBalance = oldBalance + Number(balanceToAdd)\r\n            localStorage.setItem(\"balance\", newBalance)\r\n            updateBalance();\r\n        }\r\n    }\r\n    \r\n    const addBalanceChange = (e) => {\r\n        setBalanceToAdd(e.target.value) //input del modal del monedero\r\n    }\r\n\r\nreturn(\r\n    <header id=\"header\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <div id=\"header-balance\" onClick={() => setModifyBalance(true)}>\r\n            <img id=\"header-balance_icon\" alt=\"wallet icon\" src={walletIcon}/>\r\n            <p>{balance}$</p> \r\n        </div>\r\n        {\r\n            modifyBalance &&   // renderiza el modal cuando el usuario lo clickea\r\n            <div id=\"header-wallet\">\r\n                <button id=\"header-wallet_close\" onClick={()=>setModifyBalance(false, setModifyBalanceError(false))}> x</button>\r\n                <h2 id=\"header-wallet_greeting\">¡Hola, {localStorage.getItem(\"username\")}!</h2>\r\n                <p id=\"header-wallet_instruction\">Añade fondos a tu billetera</p>\r\n                {\r\n                    modifyBalanceError &&\r\n                    <span id=\"header-wallet_error\">Introduce un monto válido</span>  \r\n                }\r\n                <input type=\"number\" onChange={addBalanceChange} min=\"1\" id=\"header-wallet_input\" />\r\n                <button type=\"button\" id=\"header-wallet_send\" onClick={handleModifyBalance}>Añadir</button>\r\n            </div>\r\n        }\r\n        <div id=\"header-profile\">\r\n            <img id=\"header-profile_icon\" alt=\"profile icon\" src={userIcon}/>\r\n            <p>{username}</p>\r\n        </div>\r\n    </header>\r\n);\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Bet.css';\r\n\r\nconst Bet = ({setBet, isGameActive, betSuccess, outOfFunds, betAmountChange, cashOutChange, incorrectCashOut, incorrectBetAmount, betPlaced}) => {\r\n    \r\n    const [blockBet, setBlockBet] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(isGameActive || betPlaced){\r\n            setBlockBet(true)\r\n        }else{                          //bloquea el botón de apostar si el juego empezó o ya se hizo una apuesta\r\n            setBlockBet(false)\r\n        }\r\n    }, [blockBet, betPlaced, isGameActive])\r\n\r\n    return(\r\n        <section id=\"bet\">\r\n            <form id=\"bet-form\" onSubmit={e => e.preventDefault()}>\r\n                <label className=\"bet_label\" forhtml=\"bet-amount_input\">Monto</label>\r\n                <input className=\"bet_input\" id=\"bet-amount_input\" type=\"number\" min=\"1\" max={localStorage.getItem(\"balance\")} onChange={betAmountChange} placeholder=\"Mínimo 1$\"></input>\r\n                {\r\n                    outOfFunds && \r\n                    <span className=\"bet-form_error\">Fondos insuficientes, haz click en tu monedero para agregar más</span>\r\n                }\r\n                {\r\n                    incorrectCashOut && \r\n                    <span className=\"bet-form_error\">Por favor introduce un número entre 1.1 y 9.9</span>\r\n                }\r\n                {\r\n                    incorrectBetAmount && \r\n                    <span className=\"bet-form_error\">La apuesta no puede ser 0. Introduce un número mayor</span>\r\n                }\r\n                {\r\n                    betSuccess &&\r\n                    <span className=\"bet-form_success\">¡Apuesta hecha!</span>\r\n                }\r\n                <label className=\"bet_label\" id=\"bet-out_label\" forhtml=\"bet-out_input\">Salida</label>\r\n                <input className=\"bet_input\" id=\"bet-out_input\" type=\"number\" min=\"1.1\" step=\"0.1\" max=\"15\" onChange={cashOutChange} placeholder=\"Mínimo: 1.1x / Máximo: 9.9x\"/>\r\n                <button id=\"bet-send\" type=\"button\" disabled={blockBet} onClick={setBet}>Apostar</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Bet;","import React from 'react';\r\nimport './GamePanel.css';\r\nimport bomb from '../../assets/bomb.svg'\r\nimport explossion from '../../assets/explosion.svg'\r\n\r\n\r\nconst GamePanel = ({multiplier, crash, gameFinish, isGameActive, betCashOut,  win}) => {\r\n\r\n    return(\r\n        <section id=\"game-panel\">\r\n            <div id=\"game-panel_new-round\">\r\n            {\r\n                !isGameActive &&  // mensaje entre terminada la partida y comenzada la otra\r\n                <h3 id=\"game-panel_new-round\">Empezando nueva ronda...</h3>\r\n            }\r\n            </div>\r\n            <div  id=\"game-panel_multiplier\">\r\n                <h1>{multiplier.toFixed(1)}x</h1> \r\n            </div>\r\n            <div id=\"game-panel_bomb\">\r\n            {\r\n                isGameActive && //muestra una bomba mientras el contador esté sumando y si termina muestra una explosión\r\n                    (gameFinish ? (<img id=\"game-panel_explosion_image\" src={explossion} alt=\"explosion\"/>) : (<img id=\"game-panel_bomb_image\" src={bomb} alt=\"bomb\"/>))\r\n            }\r\n            </div>\r\n            <div id=\"game-panel_winner\">\r\n                {\r\n                    isGameActive && win ?\r\n                    (<h2>¡Ganador!</h2>) : (<h3>...</h3>) //mensaje si el usuario gana\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default GamePanel;","import React, {useState, useEffect, useCallback} from 'react'\r\nimport './LastResults.css';\r\n\r\nfunction LastResults({crash, gameFinish}) {\r\n    const [lastResultsArray, setLastResultsArray] = useState([]);\r\n\r\n    const showLastResults = useCallback (() => {\r\n        if(lastResultsArray.length > 6){\r\n            let sliceArray = lastResultsArray.slice(1);\r\n            setLastResultsArray(sliceArray.concat(crash)) \r\n        }else if(lastResultsArray.length <= 6){\r\n            setLastResultsArray([...lastResultsArray, crash])\r\n        }\r\n    }, [crash, lastResultsArray])\r\n\r\n    useEffect(()=>{\r\n        if(gameFinish){\r\n            showLastResults()\r\n        }\r\n    }, [gameFinish])\r\n\r\n    return (\r\n        <section id=\"last-results\">\r\n            <h4 id=\"last-results_title\">Últimos resultados:</h4>\r\n            <ul id=\"last-results_list\">\r\n                {lastResultsArray.map((result, index) => (\r\n                    <li key={index} className=\"last-results_list_result\">{result}x</li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LastResults;\r\n","import React, {useEffect, useCallback, useState, useRef} from 'react';\r\nimport './BetHistory.css'\r\n\r\nconst BetHistory = ({betAmount, gameFinish, betCashOut, win, betPlaced, multiplier}) => {\r\n\r\n    const [historyArray, setHistoryArray] = useState([]);\r\n    const useFirstTime = useRef({firstTime: true});\r\n\r\n    const showBetHistory = useCallback(() => {\r\n\r\n        if(betPlaced){\r\n            if(useFirstTime.current.firstTime){\r\n                useFirstTime.current.firstTime = false;\r\n            }\r\n\r\n            if(historyArray.length > 2){\r\n                if(win){\r\n                    let prizeAmount = (Number(betAmount) * Number(betCashOut));\r\n                    setHistoryArray(historyArray => [...historyArray, [betAmount+\"$\", betCashOut+\"x\", prizeAmount]].splice(1))\r\n                }else{\r\n                    setHistoryArray(historyArray => [...historyArray, [betAmount+\"$\", betCashOut+\"x\",\"0\"]].splice(1))\r\n                }\r\n            }\r\n            if(historyArray.length <= 2){\r\n                if(win){\r\n                    let prizeAmount = (Number(betAmount) * Number(betCashOut));\r\n                    setHistoryArray(historyArray => [...historyArray, [betAmount+\"$\", betCashOut+\"x\", prizeAmount]])\r\n                }else{\r\n                    setHistoryArray(historyArray => [...historyArray, [betAmount+\"$\", betCashOut+\"x\", \"0\"]])\r\n                }\r\n            }\r\n        }\r\n    },[betAmount, win, betCashOut, historyArray])\r\n\r\n    useEffect(()=>{\r\n        if(gameFinish){\r\n            showBetHistory()\r\n        }\r\n    }, [gameFinish])\r\n\r\n    return(\r\n        <section id=\"bet-history\">\r\n            <div id=\"bet-history_title\">\r\n                <h4 id=\"bet-history_title_legend\">Historial de apuestas</h4>\r\n                <div id=\"bet-history_title_items\">\r\n                    <p className=\"bet-history_title_item\">Monto</p>\r\n                    <p className=\"bet-history_title_item\">Salida</p>\r\n                    <p className=\"bet-history_title_item\">Premio</p>\r\n                </div>\r\n            </div>\r\n            {!useFirstTime.current.firstTime &&\r\n            <div id=\"bet-history_results\">\r\n                {\r\n                    !useFirstTime.current.firstTime &&\r\n                    historyArray.map((elementArray, index) => (\r\n                    <ul key={index} className=\"bet-history_results_list\"> \r\n                        {elementArray.map((element, index) => (\r\n                            <li className=\"bet-history_results_items\" key={index}>{element}</li>\r\n                        ))}\r\n                        </ul>\r\n                    ))\r\n                }\r\n            </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BetHistory","import React, {useState, useEffect, useCallback} from 'react';\r\nimport './BetBetter.css';\r\n\r\nconst BetBetter = ({betAmount, gameFinish, betCashOut, win}) => {\r\n\r\n    const [bestBet, setBestBet] = useState([]);\r\n\r\n    const showBestBet = useCallback(() => {\r\n        if(win){\r\n            let prizeAmount = (Number(betAmount) * Number(betCashOut));  //Terminada la partida si el usuario ganó agrega los resultados a un array\r\n            setBestBet(bestBet => [...bestBet, [[betAmount+\"$\"], [betCashOut+\"x\"], [prizeAmount]]])\r\n        }\r\n    }, [betAmount, win, betCashOut, bestBet])\r\n\r\n    useEffect(()=>{\r\n        if(gameFinish){\r\n                showBestBet() \r\n            }\r\n    }, [gameFinish])\r\n    \r\n    return(\r\n        <section id=\"bet-better\">\r\n            <div id=\"bet-better_title\">\r\n                <h4 id=\"bet-better_title_legend\">Mejor apuesta</h4>\r\n                <div id=\"bet-better_title_items\">\r\n                    <p className=\"bet-better_title_item\">Monto</p>\r\n                    <p className=\"bet-better_title_item\">Salida</p>\r\n                    <p className=\"bet-better_title_item\">Premio</p>\r\n                </div>\r\n            </div>\r\n            <div id=\"bet-better_results\">\r\n                <ul id=\"bet-better_results_list\">\r\n            {\r\n                (bestBet.length !== 0) &&  // Para evitar que se ejecute al renderizar por primera vez o sin que el usuario apueste\r\n                        //Devuelve el array con la mayor ganancia\r\n                    (bestBet.reduce((subArrayAnterior, subArrayActual) => (subArrayActual[2] > subArrayAnterior[2] ? subArrayAnterior : subArrayActual)).map((item, index) => (<li className=\"bet-better_results_items\" key={index}>{item}</li>)))  \r\n            }   \r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BetBetter;\r\n","import React, {useState, useRef, useCallback, useEffect} from 'react';\nimport Bet from '../components/Bet/Bet';\nimport GamePanel from '../components/GamePanel/GamePanel';\nimport LastResults from '../components/LastResults/LastResults';\nimport BetHistory from '../components/BetHistory/BetHistory';\nimport BetBetter from '../components/BetBetter/BetBetter'\nimport './Main.css';\n\nconst Main = ({updateBalance}) => {\n\n  const [multiplier, setMultiplier] = useState(1);  // contador\n  const [isGameActive, setIsGameActive] = useState(false); \n  const [crash, setCrash] = useState(0); // numero aleatorio en el que para el multiplier\n  const [gameFinish, setGameFinish] = useState(false);\n  const [betAmount, setBetAmount] = useState(0); //monto a apostar ingresado por el usuario\n  const [cashOut, setCashOut] = useState(0);  // salida ingresada por el usuario    \n  const [betCashOut, setbetCashOut] = useState(0); //Fijar la salida ingresada\n  const [outOfFunds, setOutOfFunds] = useState(false);              // validacion del \"form\" de bet\n  const [incorrectCashOut, setIncorrectCashOut] = useState(false);     // validacion del \"form\" de bet\n  const [incorrectBetAmount, setIncorrectBetAmount] = useState(false);  // validacion del \"form\" de bet\n  const [betSuccess, setBetSuccess] = useState(false); //validacion del form \n  const [betPlaced, setBetPlaced] = useState(false);  // apuesta hecha correctamente\n  const [win, setWin] = useState(false);  \n  const useFirstTime = useRef({firstTime: true}); //Si es la primera vez que se renderiza el componente\n\n  const makeRandomNumber = (min, max) => {  //genera el numero a usar en el crash\n    return min + (max - min) * Math.random()\n  }\n\n\n  const gameStart = useCallback(() => {\n    if(useFirstTime.current.firstTime === false){\n      setGameFinish(false)\n      if(!isGameActive){\n        setCrash(makeRandomNumber(1.1, 9.9).toFixed(1))\n        setIsGameActive(true);\n      }\n    }\n  }, [isGameActive])\n\n  const gameFinished = useCallback(() => {\n    setGameFinish(true)\n    setWin(false)\n    setBetPlaced(false)\n    setTimeout(() => {\n      reset();            //reiniciar el contador después de 3s de terminada la partida\n      setTimeout(()=>{\n        gameStart()     //partida comienza a los 5s de reiniciado el contador\n      }, 5000)\n    }, 3000)\n  }, [gameFinish])\n\n  const reset = useCallback(() => {\n    setMultiplier(1); //regresa el multiplicador a 1\n    setIsGameActive(false); \n  }, [])\n\n  const handleWin = useCallback(() => {\n    setWin(true)\n    setBetPlaced(false) //reinicia la apuesta\n    let prize = Number(betAmount) * Number(betCashOut);\n    let oldBalance = Number(localStorage.getItem(\"balance\"));\n    let newBalance = (Number(oldBalance) + Number(prize)).toFixed(1);\n    localStorage.setItem(\"balance\", Number(newBalance))   //nuevo balance con el premio\n    updateBalance() //actualiza el contador en el header\n  })\n\n  const handleSetBet = () => {\n    if(Number(betAmount) !== 0 || !betAmount){   //validacicones \"form\" Bet\n      if(Number(localStorage.balance) >= Number(betAmount)){ \n        if(Number(cashOut) >= 1.1 && Number(cashOut) <= 9.9){\n          if(!isGameActive){\n            setBetSuccess(true); // mensaje al usuario de que la apuesta se hizo correctamente\n            setTimeout(() => {\n              setBetSuccess(false) // quita el mensaje a los 2s\n            }, 2000)\n            setbetCashOut(cashOut); //toma la salida creada por el jugador y la pasa a CashOut para que no se modifique si el usuario escribe en el input\n            setBetPlaced(true)\n            let oldBalance = Number(localStorage.getItem(\"balance\"));\n            let newBalance = (oldBalance - Number(betAmount)).toFixed(1);\n            localStorage.setItem(\"balance\", newBalance)  //resta la apuesta del balance\n            updateBalance() // actualiza el balance en el header\n          }\n        }else{\n          setIncorrectCashOut(true)\n          setTimeout(() => {   //Quita aviso de validaciones formulario bet\n            setIncorrectCashOut(false);\n          }, 2000);\n        }\n      }else{\n        setOutOfFunds(true)\n        setTimeout(() => { //Quita aviso de validaciones formulario bet\n          setOutOfFunds(false);\n        }, 2000);\n      }\n    }else{\n      setIncorrectBetAmount(true)\n        setTimeout(() => { //Quita aviso de validaciones formulario bet\n          setIncorrectBetAmount(false);\n        }, 2000);\n    }\n  }\n\n  const onBetAmountChange = (e) => {\n    setBetAmount(e.target.value)\n  }\n\n  const onCashOutChange = (e) => {\n    setCashOut(e.target.value)\n  } \n\n  useEffect(() => {\n    if(useFirstTime.current.firstTime === true){ //La primera vez que renderiza\n      useFirstTime.current.firstTime = false; \n        setTimeout(() => {\n          gameStart();            //juego empezado a los 5s\n        }, 5000);\n    }else{\n    let interval = null;\n    if(isGameActive){ \n      interval = setInterval(() => {\n        if(multiplier.toFixed(1) !== crash){\n          setMultiplier(multiplier => multiplier + 0.1)   //multiplicador\n          if(betPlaced && multiplier.toFixed(1) > betCashOut){  \n            handleWin()   //ganar\n          }\n        }\n        if(multiplier.toFixed(1) === crash){\n            clearInterval(interval)           //fin multiplicador\n            gameFinished();                   \n        }\n      }, 100);\n    }else if(!isGameActive && multiplier !== 0){\n      clearInterval(interval)\n    }\n    return () => clearInterval(interval);\n  }\n  }, [isGameActive, multiplier, crash, gameFinished, gameStart, gameFinish, win, betPlaced, handleWin]);\n\n\n  return(\n    <>\n      <main id=\"main\">\n        <Bet isGameActive={isGameActive} betSuccess={betSuccess} setBet={handleSetBet} betAmountChange={onBetAmountChange} cashOutChange={onCashOutChange} outOfFunds={outOfFunds} incorrectCashOut={incorrectCashOut} incorrectBetAmount={incorrectBetAmount} betPlaced={betPlaced} />\n        <BetHistory betCashOut={betCashOut} multiplier={multiplier} betPlaced={betPlaced} gameFinish={gameFinish} betAmount={betAmount} win={win}/>\n        <BetBetter betCashOut={betCashOut} multiplier={multiplier} betPlaced={betPlaced} gameFinish={gameFinish} betAmount={betAmount} win={win}/>\n        <GamePanel win={win} multiplier={multiplier}  betCashOut={betCashOut} crash={crash} gameFinish={gameFinish} betPlaced={betPlaced} isGameActive={isGameActive} cashOut={cashOut}/>\n        <LastResults gameFinish={gameFinish} crash={crash} />\n      </main>\n    </>\n  );\n}\n\nexport default Main;\n","import React, { useState } from 'react';\r\nimport Login from '../components/Login/Login';\r\nimport Header from '../components/Header/Header';\r\nimport Main from './Main';\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n\r\n    const [username, setUsername] = useState(localStorage.getItem(\"username\"));\r\n    const [incorrectUsername, setIncorrectUsername] = useState(false);\r\n    const [balance, setBalance] = useState(localStorage.getItem(\"balance\"));\r\n    const [incorrectBalance, setIncorrectBalance] = useState(false);\r\n    const [logIn, setLogIn] = useState(false);\r\n\r\n    const handleLogin = () => {    // Validación del form\r\n        console.log(username);\r\n        if(username !== null){\r\n            if(username.length > 2){\r\n                if(balance >= 10 && balance <= 10000){\r\n                localStorage.setItem(\"isLogged\", true)\r\n                localStorage.setItem(\"username\", username); \r\n                localStorage.setItem(\"balance\", balance);\r\n                setLogIn(true) //cambio de ruta\r\n                }else{\r\n                    setIncorrectBalance(true);\r\n                    setTimeout(()=>{\r\n                        setIncorrectBalance(false)\r\n                    }, 2000)\r\n                }\r\n            }else{\r\n                setIncorrectUsername(true);\r\n                setTimeout(()=>{\r\n                    setIncorrectUsername(false)\r\n                }, 2000)\r\n            }\r\n        }else{\r\n            setIncorrectUsername(true);\r\n                setTimeout(()=>{\r\n                    setIncorrectUsername(false)\r\n                }, 2000)\r\n        }\r\n    }\r\n\r\n    const handleGuestLogin = ()  => {  // opcion invitado\r\n        setUsername(\"Invitado\");\r\n        setBalance(100);\r\n        localStorage.setItem(\"isLogged\", true);\r\n        localStorage.setItem(\"username\", \"Invitado\");\r\n        localStorage.setItem(\"balance\", \"100\");\r\n        setLogIn(true) // cambio de ruta\r\n    }\r\n\r\n    const handleGetBalance = () => {\r\n        setBalance(localStorage.getItem(\"balance\"))\r\n    }\r\n\r\n    const onUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n        console.log(username);\r\n    }\r\n\r\n    const onBalanceChange = (e) => {\r\n        setBalance(e.target.value);\r\n    }\r\n\r\n    if(!localStorage.getItem(\"isLogged\")){\r\n        return(\r\n            <>\r\n            <Login incorrectUsername={incorrectUsername} incorrectBalance={incorrectBalance} handleLogin={handleLogin} handleGuestLogin={handleGuestLogin} usernameChange={onUsernameChange} balanceChange={onBalanceChange}/>\r\n            <footer id=\"footer\"><p id=\"footer_link\">Icons made by <a className=\"footer_links_link\" href=\"https://smashicons.com/\" title=\"Smashicons\">Smashicons</a> from <a className=\"footer_links_link\" href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></p></footer>    \r\n            </>\r\n        );\r\n    }else if(localStorage.getItem(\"isLogged\") === \"true\" || logIn){\r\n        return(\r\n            <>\r\n                <Header balance={balance} username={username} updateBalance={handleGetBalance}/>\r\n                <Main updateBalance={handleGetBalance}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}